import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head'

import Box from '@mui/material/Box';
import Container from '@mui/material/Container';
import Grid from '@mui/material/Grid';
import Typography from "@mui/material/Typography"
import Navbar from '../../components/Navbar'

//importing required libraries to display the images
import ImageList from '@mui/material/ImageList';
import Image from 'next/image'
import ImageListItem from '@mui/material/ImageListItem';


//importing getbook function
import { getBook } from '../../utils/api/getbook';

//bonus point
import CircularLoading from '../../components/CircularProgress'

function Book({ bookData }) {


    const [isLoading, setIsLoading] = useState(true);
  return (
    
      <main>
      <Container maxWidth="md">
      <Typography
            component="h1"
            variant="h4"
            align="center"
            color="text.primary"
            gutterBottom
        >
            {bookData.title}
        </Typography>
        <Typography
            component="h6"
            variant="h6"
            align="center"
            color="text.primary"
            gutterBottom
        >
            Covers
        </Typography>
      </Container>

    <Container maxWidth="md">
    {bookData.covers ?
      <ImageList cols={3}>
        {bookData.covers.map((coverId) => (
          <ImageListItem key={coverId}>
            <img  src={`https://covers.openlibrary.org/b/id/${coverId}-M.jpg`} alt={bookData.title} />
          </ImageListItem>
        ))}
      </ImageList>
      :
      <Typography
      component="h6"
            variant="h6"
            align="center"
            color="lightblue"
            >No Covers found for this book!</Typography>
      }
      </Container>
      </main>
    
  );
}

function BookPage() {
  const router = useRouter();
  const [bookData, setBookData] = useState(null);
  const [isLoading, setIsLoading] = useState(true);


  useEffect(() => {
    setIsLoading(true);
    if (router.query.bookId) {
      getBook(router.query.bookId).then((data) => {
        setBookData(data);
        setIsLoading(false);
      });
    }
  }, [router.query.bookId]);


  return(

    <div>
    <Head>
        <title>Library App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="../favicon.ico" />
      </Head>
      <Navbar />

      {isLoading ? (
        <CircularLoading text="book data loading..." />

      ):(
    
      <Book bookData={bookData} />

      )}
    </div>);
}

export default BookPage;
